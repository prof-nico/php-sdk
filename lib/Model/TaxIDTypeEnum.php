<?php
/**
 * TaxIDTypeEnum
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Monite Partner API
 *
 * The Monite REST API, for Monite partners to integrate with our solution.
 *
 * The version of the OpenAPI document: 2023-03-14
 * Contact: developers@monite.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * TaxIDTypeEnum Class Doc Comment
 *
 * @category Class
 * @description An enumeration.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TaxIDTypeEnum
{
    /**
     * Possible values of this enum
     */
    public const AE_TRN = 'ae_trn';

    public const AU_ABN = 'au_abn';

    public const AU_ARN = 'au_arn';

    public const BG_UIC = 'bg_uic';

    public const BR_CNPJ = 'br_cnpj';

    public const BR_CPF = 'br_cpf';

    public const CA_BN = 'ca_bn';

    public const CA_GST_HST = 'ca_gst_hst';

    public const CA_PST_BC = 'ca_pst_bc';

    public const CA_PST_MB = 'ca_pst_mb';

    public const CA_PST_SK = 'ca_pst_sk';

    public const CA_QST = 'ca_qst';

    public const CH_VAT = 'ch_vat';

    public const CL_TIN = 'cl_tin';

    public const ES_CIF = 'es_cif';

    public const EU_OSS_VAT = 'eu_oss_vat';

    public const EU_VAT = 'eu_vat';

    public const GB_VAT = 'gb_vat';

    public const GE_VAT = 'ge_vat';

    public const HK_BR = 'hk_br';

    public const HU_TIN = 'hu_tin';

    public const ID_NPWP = 'id_npwp';

    public const IL_VAT = 'il_vat';

    public const IN_GST = 'in_gst';

    public const IS_VAT = 'is_vat';

    public const JP_CN = 'jp_cn';

    public const JP_RN = 'jp_rn';

    public const KR_BRN = 'kr_brn';

    public const LI_UID = 'li_uid';

    public const MX_RFC = 'mx_rfc';

    public const MY_FRP = 'my_frp';

    public const MY_ITN = 'my_itn';

    public const MY_SST = 'my_sst';

    public const NO_VAT = 'no_vat';

    public const NZ_GST = 'nz_gst';

    public const RU_INN = 'ru_inn';

    public const RU_KPP = 'ru_kpp';

    public const SA_VAT = 'sa_vat';

    public const SG_GST = 'sg_gst';

    public const SG_UEN = 'sg_uen';

    public const SI_TIN = 'si_tin';

    public const TH_VAT = 'th_vat';

    public const TW_VAT = 'tw_vat';

    public const UA_VAT = 'ua_vat';

    public const US_EIN = 'us_ein';

    public const ZA_VAT = 'za_vat';

    public const UNKNOWN = 'unknown';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::AE_TRN,
            self::AU_ABN,
            self::AU_ARN,
            self::BG_UIC,
            self::BR_CNPJ,
            self::BR_CPF,
            self::CA_BN,
            self::CA_GST_HST,
            self::CA_PST_BC,
            self::CA_PST_MB,
            self::CA_PST_SK,
            self::CA_QST,
            self::CH_VAT,
            self::CL_TIN,
            self::ES_CIF,
            self::EU_OSS_VAT,
            self::EU_VAT,
            self::GB_VAT,
            self::GE_VAT,
            self::HK_BR,
            self::HU_TIN,
            self::ID_NPWP,
            self::IL_VAT,
            self::IN_GST,
            self::IS_VAT,
            self::JP_CN,
            self::JP_RN,
            self::KR_BRN,
            self::LI_UID,
            self::MX_RFC,
            self::MY_FRP,
            self::MY_ITN,
            self::MY_SST,
            self::NO_VAT,
            self::NZ_GST,
            self::RU_INN,
            self::RU_KPP,
            self::SA_VAT,
            self::SG_GST,
            self::SG_UEN,
            self::SI_TIN,
            self::TH_VAT,
            self::TW_VAT,
            self::UA_VAT,
            self::US_EIN,
            self::ZA_VAT,
            self::UNKNOWN
        ];
    }
}


