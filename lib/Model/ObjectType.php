<?php
/**
 * ObjectType
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Monite Partner API
 *
 * The Monite REST API, for Monite partners to integrate with our solution.
 *
 * The version of the OpenAPI document: 2023-03-14
 * Contact: developers@monite.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ObjectType Class Doc Comment
 *
 * @category Class
 * @description An enumeration.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ObjectType
{
    /**
     * Possible values of this enum
     */
    public const ACCOUNT = 'account';

    public const APPROVAL = 'approval';

    public const APPROVAL_REQUEST = 'approval_request';

    public const APPROVAL_POLICY = 'approval_policy';

    public const MONITESCRIPT_PROCESS = 'monitescript_process';

    public const AUDIT_TRAIL = 'audit_trail';

    public const COMMENT = 'comment';

    public const COUNTERPART = 'counterpart';

    public const COUNTERPART_ADDRESS = 'counterpart_address';

    public const COUNTERPART_BANK_ACCOUNT = 'counterpart_bank_account';

    public const COUNTERPART_CONTACT_PERSON = 'counterpart_contact_person';

    public const COUNTERPART_PARTNER_METADATA = 'counterpart_partner_metadata';

    public const COUNTERPART_TAX_ID = 'counterpart_tax_id';

    public const ENTITY = 'entity';

    public const ENTITY_BANK_ACCOUNT = 'entity_bank_account';

    public const ENTITY_SETTINGS = 'entity_settings';

    public const ENTITY_TOKEN = 'entity_token';

    public const ENTITY_USER = 'entity_user';

    public const ENTITY_USER_TOKEN = 'entity_user_token';

    public const EXPORT = 'export';

    public const PARTNER = 'partner';

    public const PARTNER_INTERNAL_CONFIG = 'partner_internal_config';

    public const PARTNER_SETTINGS = 'partner_settings';

    public const PARTNER_TOKEN = 'partner_token';

    public const PAYABLE = 'payable';

    public const PAYABLE_LINE_ITEM = 'payable_line_item';

    public const PAYABLES_PURCHASE_ORDER = 'payables_purchase_order';

    public const PAYMENT = 'payment';

    public const PAYMENT_INTENT = 'payment_intent';

    public const PAYMENT_LINK = 'payment_link';

    public const PAYMENT_REMINDER = 'payment_reminder';

    public const PRODUCT = 'product';

    public const RECEIVABLE = 'receivable';

    public const RECONCILIATION = 'reconciliation';

    public const RECURRENCE = 'recurrence';

    public const ROLE = 'role';

    public const TAG = 'tag';

    public const TODO_TASK = 'todo_task';

    public const TODO_TASK_MUTE = 'todo_task_mute';

    public const TRANSACTION = 'transaction';

    public const WEBHOOK = 'webhook';

    public const WORKFLOW = 'workflow';

    public const WORKFLOW_PIPELINE = 'workflow_pipeline';

    public const OVERDUE_REMINDER = 'overdue_reminder';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::ACCOUNT,
            self::APPROVAL,
            self::APPROVAL_REQUEST,
            self::APPROVAL_POLICY,
            self::MONITESCRIPT_PROCESS,
            self::AUDIT_TRAIL,
            self::COMMENT,
            self::COUNTERPART,
            self::COUNTERPART_ADDRESS,
            self::COUNTERPART_BANK_ACCOUNT,
            self::COUNTERPART_CONTACT_PERSON,
            self::COUNTERPART_PARTNER_METADATA,
            self::COUNTERPART_TAX_ID,
            self::ENTITY,
            self::ENTITY_BANK_ACCOUNT,
            self::ENTITY_SETTINGS,
            self::ENTITY_TOKEN,
            self::ENTITY_USER,
            self::ENTITY_USER_TOKEN,
            self::EXPORT,
            self::PARTNER,
            self::PARTNER_INTERNAL_CONFIG,
            self::PARTNER_SETTINGS,
            self::PARTNER_TOKEN,
            self::PAYABLE,
            self::PAYABLE_LINE_ITEM,
            self::PAYABLES_PURCHASE_ORDER,
            self::PAYMENT,
            self::PAYMENT_INTENT,
            self::PAYMENT_LINK,
            self::PAYMENT_REMINDER,
            self::PRODUCT,
            self::RECEIVABLE,
            self::RECONCILIATION,
            self::RECURRENCE,
            self::ROLE,
            self::TAG,
            self::TODO_TASK,
            self::TODO_TASK_MUTE,
            self::TRANSACTION,
            self::WEBHOOK,
            self::WORKFLOW,
            self::WORKFLOW_PIPELINE,
            self::OVERDUE_REMINDER
        ];
    }
}


